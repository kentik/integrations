// Code generated by protoc-gen-go.
// source: fbquery/fbresult.proto
// DO NOT EDIT!

/*
Package fbquery is a generated protocol buffer package.

It is generated from these files:
	fbquery/fbresult.proto

It has these top-level messages:
	QueryResult
	FinalResponse
*/
package fbquery

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QueryResult struct {
	Params           *QueryResult_InputParams    `protobuf:"bytes,1,opt,name=params" json:"params,omitempty"`
	Int32Column      []*QueryResult_Int32Column  `protobuf:"bytes,2,rep,name=int32Column" json:"int32Column,omitempty"`
	Int64Column      []*QueryResult_Int64Column  `protobuf:"bytes,3,rep,name=int64Column" json:"int64Column,omitempty"`
	Uint32Column     []*QueryResult_UInt32Column `protobuf:"bytes,4,rep,name=uint32Column" json:"uint32Column,omitempty"`
	Uint64Column     []*QueryResult_UInt64Column `protobuf:"bytes,5,rep,name=uint64Column" json:"uint64Column,omitempty"`
	StringColumn     []*QueryResult_StringColumn `protobuf:"bytes,6,rep,name=stringColumn" json:"stringColumn,omitempty"`
	BytesColumn      []*QueryResult_BytesColumn  `protobuf:"bytes,7,rep,name=bytesColumn" json:"bytesColumn,omitempty"`
	FloatColumn      []*QueryResult_FloatColumn  `protobuf:"bytes,8,rep,name=floatColumn" json:"floatColumn,omitempty"`
	DoubleColumn     []*QueryResult_DoubleColumn `protobuf:"bytes,9,rep,name=doubleColumn" json:"doubleColumn,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *QueryResult) Reset()                    { *m = QueryResult{} }
func (m *QueryResult) String() string            { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()               {}
func (*QueryResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *QueryResult) GetParams() *QueryResult_InputParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *QueryResult) GetInt32Column() []*QueryResult_Int32Column {
	if m != nil {
		return m.Int32Column
	}
	return nil
}

func (m *QueryResult) GetInt64Column() []*QueryResult_Int64Column {
	if m != nil {
		return m.Int64Column
	}
	return nil
}

func (m *QueryResult) GetUint32Column() []*QueryResult_UInt32Column {
	if m != nil {
		return m.Uint32Column
	}
	return nil
}

func (m *QueryResult) GetUint64Column() []*QueryResult_UInt64Column {
	if m != nil {
		return m.Uint64Column
	}
	return nil
}

func (m *QueryResult) GetStringColumn() []*QueryResult_StringColumn {
	if m != nil {
		return m.StringColumn
	}
	return nil
}

func (m *QueryResult) GetBytesColumn() []*QueryResult_BytesColumn {
	if m != nil {
		return m.BytesColumn
	}
	return nil
}

func (m *QueryResult) GetFloatColumn() []*QueryResult_FloatColumn {
	if m != nil {
		return m.FloatColumn
	}
	return nil
}

func (m *QueryResult) GetDoubleColumn() []*QueryResult_DoubleColumn {
	if m != nil {
		return m.DoubleColumn
	}
	return nil
}

type QueryResult_ColumnHeaderInfo struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Position         *int32  `protobuf:"varint,2,opt,name=position" json:"position,omitempty"`
	Format           *string `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	AggName          *string `protobuf:"bytes,4,opt,name=aggName" json:"aggName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *QueryResult_ColumnHeaderInfo) Reset()                    { *m = QueryResult_ColumnHeaderInfo{} }
func (m *QueryResult_ColumnHeaderInfo) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_ColumnHeaderInfo) ProtoMessage()               {}
func (*QueryResult_ColumnHeaderInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *QueryResult_ColumnHeaderInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *QueryResult_ColumnHeaderInfo) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *QueryResult_ColumnHeaderInfo) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *QueryResult_ColumnHeaderInfo) GetAggName() string {
	if m != nil && m.AggName != nil {
		return *m.AggName
	}
	return ""
}

type QueryResult_InputParams struct {
	IOrderby         *string `protobuf:"bytes,1,opt,name=i_orderby" json:"i_orderby,omitempty"`
	IOffset          *int32  `protobuf:"varint,2,opt,name=i_offset" json:"i_offset,omitempty"`
	ILimit           *int32  `protobuf:"varint,3,opt,name=i_limit" json:"i_limit,omitempty"`
	IStartTime       *int64  `protobuf:"varint,4,opt,name=i_start_time" json:"i_start_time,omitempty"`
	IEndTime         *int64  `protobuf:"varint,5,opt,name=i_end_time" json:"i_end_time,omitempty"`
	IDeviceName      *string `protobuf:"bytes,6,opt,name=i_device_name" json:"i_device_name,omitempty"`
	IDeviceId        *int64  `protobuf:"varint,7,opt,name=i_device_id" json:"i_device_id,omitempty"`
	ISqStart         *int64  `protobuf:"varint,8,opt,name=i_sq_start" json:"i_sq_start,omitempty"`
	ISqEnd           *int64  `protobuf:"varint,9,opt,name=i_sq_end" json:"i_sq_end,omitempty"`
	IDuration        *int32  `protobuf:"varint,10,opt,name=i_duration" json:"i_duration,omitempty"`
	IDeviceSiteName  *string `protobuf:"bytes,11,opt,name=i_device_site_name" json:"i_device_site_name,omitempty"`
	IDeviceType      *string `protobuf:"bytes,12,opt,name=i_device_type" json:"i_device_type,omitempty"`
	IDebugInfo       *string `protobuf:"bytes,13,opt,name=i_debug_info" json:"i_debug_info,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *QueryResult_InputParams) Reset()                    { *m = QueryResult_InputParams{} }
func (m *QueryResult_InputParams) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_InputParams) ProtoMessage()               {}
func (*QueryResult_InputParams) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *QueryResult_InputParams) GetIOrderby() string {
	if m != nil && m.IOrderby != nil {
		return *m.IOrderby
	}
	return ""
}

func (m *QueryResult_InputParams) GetIOffset() int32 {
	if m != nil && m.IOffset != nil {
		return *m.IOffset
	}
	return 0
}

func (m *QueryResult_InputParams) GetILimit() int32 {
	if m != nil && m.ILimit != nil {
		return *m.ILimit
	}
	return 0
}

func (m *QueryResult_InputParams) GetIStartTime() int64 {
	if m != nil && m.IStartTime != nil {
		return *m.IStartTime
	}
	return 0
}

func (m *QueryResult_InputParams) GetIEndTime() int64 {
	if m != nil && m.IEndTime != nil {
		return *m.IEndTime
	}
	return 0
}

func (m *QueryResult_InputParams) GetIDeviceName() string {
	if m != nil && m.IDeviceName != nil {
		return *m.IDeviceName
	}
	return ""
}

func (m *QueryResult_InputParams) GetIDeviceId() int64 {
	if m != nil && m.IDeviceId != nil {
		return *m.IDeviceId
	}
	return 0
}

func (m *QueryResult_InputParams) GetISqStart() int64 {
	if m != nil && m.ISqStart != nil {
		return *m.ISqStart
	}
	return 0
}

func (m *QueryResult_InputParams) GetISqEnd() int64 {
	if m != nil && m.ISqEnd != nil {
		return *m.ISqEnd
	}
	return 0
}

func (m *QueryResult_InputParams) GetIDuration() int32 {
	if m != nil && m.IDuration != nil {
		return *m.IDuration
	}
	return 0
}

func (m *QueryResult_InputParams) GetIDeviceSiteName() string {
	if m != nil && m.IDeviceSiteName != nil {
		return *m.IDeviceSiteName
	}
	return ""
}

func (m *QueryResult_InputParams) GetIDeviceType() string {
	if m != nil && m.IDeviceType != nil {
		return *m.IDeviceType
	}
	return ""
}

func (m *QueryResult_InputParams) GetIDebugInfo() string {
	if m != nil && m.IDebugInfo != nil {
		return *m.IDebugInfo
	}
	return ""
}

type QueryResult_Int32Column struct {
	Header           *QueryResult_ColumnHeaderInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Values           []int32                       `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *QueryResult_Int32Column) Reset()                    { *m = QueryResult_Int32Column{} }
func (m *QueryResult_Int32Column) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_Int32Column) ProtoMessage()               {}
func (*QueryResult_Int32Column) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *QueryResult_Int32Column) GetHeader() *QueryResult_ColumnHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResult_Int32Column) GetValues() []int32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type QueryResult_Int64Column struct {
	Header           *QueryResult_ColumnHeaderInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Values           []int64                       `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *QueryResult_Int64Column) Reset()                    { *m = QueryResult_Int64Column{} }
func (m *QueryResult_Int64Column) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_Int64Column) ProtoMessage()               {}
func (*QueryResult_Int64Column) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *QueryResult_Int64Column) GetHeader() *QueryResult_ColumnHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResult_Int64Column) GetValues() []int64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type QueryResult_UInt32Column struct {
	Header           *QueryResult_ColumnHeaderInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Values           []uint32                      `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *QueryResult_UInt32Column) Reset()                    { *m = QueryResult_UInt32Column{} }
func (m *QueryResult_UInt32Column) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_UInt32Column) ProtoMessage()               {}
func (*QueryResult_UInt32Column) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

func (m *QueryResult_UInt32Column) GetHeader() *QueryResult_ColumnHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResult_UInt32Column) GetValues() []uint32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type QueryResult_UInt64Column struct {
	Header           *QueryResult_ColumnHeaderInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Values           []uint64                      `protobuf:"varint,2,rep,packed,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *QueryResult_UInt64Column) Reset()                    { *m = QueryResult_UInt64Column{} }
func (m *QueryResult_UInt64Column) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_UInt64Column) ProtoMessage()               {}
func (*QueryResult_UInt64Column) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 5} }

func (m *QueryResult_UInt64Column) GetHeader() *QueryResult_ColumnHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResult_UInt64Column) GetValues() []uint64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type QueryResult_StringColumn struct {
	Header           *QueryResult_ColumnHeaderInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Values           []string                      `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *QueryResult_StringColumn) Reset()                    { *m = QueryResult_StringColumn{} }
func (m *QueryResult_StringColumn) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_StringColumn) ProtoMessage()               {}
func (*QueryResult_StringColumn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 6} }

func (m *QueryResult_StringColumn) GetHeader() *QueryResult_ColumnHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResult_StringColumn) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type QueryResult_BytesColumn struct {
	Header           *QueryResult_ColumnHeaderInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Values           [][]byte                      `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *QueryResult_BytesColumn) Reset()                    { *m = QueryResult_BytesColumn{} }
func (m *QueryResult_BytesColumn) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_BytesColumn) ProtoMessage()               {}
func (*QueryResult_BytesColumn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 7} }

func (m *QueryResult_BytesColumn) GetHeader() *QueryResult_ColumnHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResult_BytesColumn) GetValues() [][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

type QueryResult_FloatColumn struct {
	Header           *QueryResult_ColumnHeaderInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Values           []float32                     `protobuf:"fixed32,2,rep,packed,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *QueryResult_FloatColumn) Reset()                    { *m = QueryResult_FloatColumn{} }
func (m *QueryResult_FloatColumn) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_FloatColumn) ProtoMessage()               {}
func (*QueryResult_FloatColumn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 8} }

func (m *QueryResult_FloatColumn) GetHeader() *QueryResult_ColumnHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResult_FloatColumn) GetValues() []float32 {
	if m != nil {
		return m.Values
	}
	return nil
}

type QueryResult_DoubleColumn struct {
	Header           *QueryResult_ColumnHeaderInfo `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Values           []float64                     `protobuf:"fixed64,2,rep,packed,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *QueryResult_DoubleColumn) Reset()                    { *m = QueryResult_DoubleColumn{} }
func (m *QueryResult_DoubleColumn) String() string            { return proto.CompactTextString(m) }
func (*QueryResult_DoubleColumn) ProtoMessage()               {}
func (*QueryResult_DoubleColumn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 9} }

func (m *QueryResult_DoubleColumn) GetHeader() *QueryResult_ColumnHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryResult_DoubleColumn) GetValues() []float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type FinalResponse struct {
	Target           *string      `protobuf:"bytes,1,req,name=Target" json:"Target,omitempty"`
	RequestID        *string      `protobuf:"bytes,2,req,name=RequestID" json:"RequestID,omitempty"`
	Result           *QueryResult `protobuf:"bytes,3,opt,name=Result" json:"Result,omitempty"`
	Error            *string      `protobuf:"bytes,4,opt,name=Error" json:"Error,omitempty"`
	RequestKey       *string      `protobuf:"bytes,5,opt,name=RequestKey" json:"RequestKey,omitempty"`
	FromCache        *bool        `protobuf:"varint,6,opt,name=FromCache" json:"FromCache,omitempty"`
	NumResp          *int32       `protobuf:"varint,7,opt,name=NumResp" json:"NumResp,omitempty"`
	ThisResp         *int32       `protobuf:"varint,8,opt,name=ThisResp" json:"ThisResp,omitempty"`
	MissingMDS       *bool        `protobuf:"varint,9,opt,name=MissingMDS" json:"MissingMDS,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *FinalResponse) Reset()                    { *m = FinalResponse{} }
func (m *FinalResponse) String() string            { return proto.CompactTextString(m) }
func (*FinalResponse) ProtoMessage()               {}
func (*FinalResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FinalResponse) GetTarget() string {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return ""
}

func (m *FinalResponse) GetRequestID() string {
	if m != nil && m.RequestID != nil {
		return *m.RequestID
	}
	return ""
}

func (m *FinalResponse) GetResult() *QueryResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *FinalResponse) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *FinalResponse) GetRequestKey() string {
	if m != nil && m.RequestKey != nil {
		return *m.RequestKey
	}
	return ""
}

func (m *FinalResponse) GetFromCache() bool {
	if m != nil && m.FromCache != nil {
		return *m.FromCache
	}
	return false
}

func (m *FinalResponse) GetNumResp() int32 {
	if m != nil && m.NumResp != nil {
		return *m.NumResp
	}
	return 0
}

func (m *FinalResponse) GetThisResp() int32 {
	if m != nil && m.ThisResp != nil {
		return *m.ThisResp
	}
	return 0
}

func (m *FinalResponse) GetMissingMDS() bool {
	if m != nil && m.MissingMDS != nil {
		return *m.MissingMDS
	}
	return false
}

func init() {
	proto.RegisterType((*QueryResult)(nil), "fbquery.QueryResult")
	proto.RegisterType((*QueryResult_ColumnHeaderInfo)(nil), "fbquery.QueryResult.ColumnHeaderInfo")
	proto.RegisterType((*QueryResult_InputParams)(nil), "fbquery.QueryResult.InputParams")
	proto.RegisterType((*QueryResult_Int32Column)(nil), "fbquery.QueryResult.Int32Column")
	proto.RegisterType((*QueryResult_Int64Column)(nil), "fbquery.QueryResult.Int64Column")
	proto.RegisterType((*QueryResult_UInt32Column)(nil), "fbquery.QueryResult.UInt32Column")
	proto.RegisterType((*QueryResult_UInt64Column)(nil), "fbquery.QueryResult.UInt64Column")
	proto.RegisterType((*QueryResult_StringColumn)(nil), "fbquery.QueryResult.StringColumn")
	proto.RegisterType((*QueryResult_BytesColumn)(nil), "fbquery.QueryResult.BytesColumn")
	proto.RegisterType((*QueryResult_FloatColumn)(nil), "fbquery.QueryResult.FloatColumn")
	proto.RegisterType((*QueryResult_DoubleColumn)(nil), "fbquery.QueryResult.DoubleColumn")
	proto.RegisterType((*FinalResponse)(nil), "fbquery.FinalResponse")
}

func init() { proto.RegisterFile("fbquery/fbresult.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 629 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0xb6, 0xc9, 0xda, 0x93, 0x74, 0x0c, 0x33, 0x50, 0xd5, 0xab, 0x32, 0x81, 0xb4,
	0xab, 0x82, 0xc6, 0xbf, 0xfb, 0x6d, 0x4c, 0x4c, 0x68, 0x13, 0xec, 0x8f, 0x04, 0x57, 0x91, 0xbb,
	0x38, 0x9d, 0xa5, 0x24, 0xee, 0x6c, 0x67, 0x52, 0xdf, 0x85, 0x77, 0xe1, 0x8a, 0xf7, 0xc2, 0x3e,
	0xf1, 0x3a, 0x0f, 0xaa, 0x22, 0xa1, 0xde, 0x55, 0x5f, 0xcf, 0xf7, 0x3b, 0xc7, 0xc7, 0xfe, 0x02,
	0xcf, 0xf2, 0xc9, 0x4d, 0xcd, 0xe4, 0xfc, 0x55, 0x3e, 0x91, 0x4c, 0xd5, 0x85, 0x1e, 0xcf, 0xa4,
	0xd0, 0x82, 0x6c, 0x38, 0x7d, 0xe7, 0x67, 0x02, 0xf1, 0x57, 0xfb, 0xeb, 0x0c, 0xff, 0x26, 0xaf,
	0x21, 0x9a, 0x51, 0x49, 0x4b, 0x35, 0x08, 0x46, 0xc1, 0x6e, 0xbc, 0x37, 0x1a, 0xbb, 0xca, 0xb1,
	0x57, 0x35, 0x3e, 0xae, 0x66, 0xb5, 0xfe, 0x82, 0x75, 0xe4, 0x1d, 0xc4, 0xbc, 0xd2, 0x6f, 0xf6,
	0x0e, 0x44, 0x51, 0x97, 0xd5, 0xa0, 0x35, 0x6a, 0xaf, 0xb0, 0x2d, 0xea, 0x9c, 0xed, 0xfd, 0x5b,
	0x67, 0x6b, 0xaf, 0xb6, 0xdd, 0xd5, 0x91, 0x0f, 0x90, 0xd4, 0x7e, 0xbb, 0x0e, 0xfa, 0x9e, 0x2f,
	0xf5, 0x5d, 0xfa, 0xfd, 0x9c, 0x71, 0xd1, 0x30, 0xfc, 0x87, 0xd1, 0xef, 0xa8, 0xb4, 0xe4, 0xd5,
	0xd4, 0x19, 0xa3, 0x15, 0xc6, 0x73, 0xaf, 0xd0, 0x9e, 0x70, 0x32, 0xd7, 0x4c, 0x39, 0xdf, 0xc6,
	0x8a, 0x13, 0xee, 0xdf, 0xd7, 0x59, 0x5b, 0x5e, 0x08, 0xaa, 0x9d, 0xad, 0xbb, 0xc2, 0x76, 0x74,
	0x5f, 0x67, 0xc7, 0xcc, 0x44, 0x3d, 0x29, 0x98, 0xf3, 0xf5, 0x56, 0x8c, 0x79, 0xe8, 0x15, 0x0e,
	0xcf, 0x61, 0xab, 0xf9, 0xf5, 0x89, 0xd1, 0x8c, 0xc9, 0xe3, 0x2a, 0x17, 0x24, 0x81, 0x4e, 0x45,
	0x4b, 0x86, 0x6f, 0xa0, 0x47, 0xb6, 0xa0, 0x3b, 0x13, 0x8a, 0x6b, 0x2e, 0xec, 0xf5, 0x06, 0xbb,
	0x21, 0xd9, 0x84, 0x28, 0x17, 0xb2, 0xa4, 0xda, 0xdc, 0x9b, 0xad, 0x78, 0x04, 0x1b, 0x74, 0x3a,
	0x3d, 0xb5, 0x96, 0x8e, 0x15, 0x86, 0x3f, 0x5a, 0x10, 0xfb, 0x8f, 0xe4, 0x31, 0xf4, 0x78, 0x2a,
	0xa4, 0xe1, 0x4f, 0xe6, 0xf7, 0x54, 0x23, 0xe5, 0xb9, 0x62, 0xda, 0x51, 0x0d, 0x85, 0xa7, 0x05,
	0x2f, 0x79, 0x83, 0x0d, 0xc9, 0x36, 0x24, 0x3c, 0x55, 0x9a, 0x4a, 0x9d, 0x6a, 0xee, 0xd8, 0x6d,
	0x42, 0x00, 0x78, 0xca, 0xaa, 0xac, 0xd1, 0x42, 0xd4, 0x9e, 0x42, 0x9f, 0xa7, 0x19, 0xbb, 0xe5,
	0x57, 0x2c, 0xc5, 0xc9, 0x23, 0xec, 0xf1, 0xc4, 0x3c, 0xb2, 0x3b, 0x99, 0x67, 0xe6, 0x0a, 0x16,
	0x7e, 0x75, 0xd3, 0x80, 0xcd, 0x7e, 0xad, 0x86, 0xc3, 0x18, 0xcd, 0x60, 0xcd, 0xe6, 0x16, 0x55,
	0x59, 0x2d, 0x29, 0x1e, 0x1b, 0x70, 0x9e, 0x21, 0x90, 0x05, 0xce, 0xec, 0xc3, 0xb5, 0x8a, 0xb1,
	0x95, 0x3f, 0x81, 0x9e, 0xcf, 0xd8, 0x20, 0x41, 0x19, 0x8f, 0x90, 0xb1, 0x49, 0x3d, 0x4d, 0xb9,
	0xd9, 0xec, 0xa0, 0x8f, 0xeb, 0xf9, 0x66, 0xb7, 0xe3, 0x67, 0x21, 0xba, 0xc6, 0xe5, 0xbb, 0xd0,
	0xbd, 0x5c, 0x7a, 0x6b, 0x7f, 0xdd, 0x12, 0x81, 0xe8, 0x96, 0x16, 0x35, 0x53, 0x18, 0xba, 0x70,
	0xbf, 0xb5, 0x15, 0x38, 0xf2, 0xe2, 0xf1, 0xae, 0x85, 0xdc, 0x46, 0xf2, 0x77, 0x48, 0x2e, 0xd7,
	0x3e, 0x74, 0xdf, 0x47, 0xaf, 0x77, 0xea, 0x0e, 0xa2, 0x2f, 0x21, 0xf9, 0x23, 0x94, 0xff, 0x85,
	0xde, 0x7c, 0x80, 0xee, 0x0d, 0x2f, 0x20, 0x7e, 0x98, 0xd9, 0x35, 0x50, 0x13, 0x7b, 0x79, 0x7e,
	0xa4, 0xd7, 0xb2, 0x86, 0xd6, 0xdd, 0x86, 0xfd, 0xd0, 0xaf, 0x07, 0x1d, 0x58, 0xf4, 0xce, 0xaf,
	0x00, 0xfa, 0x47, 0xbc, 0xa2, 0x85, 0x31, 0xcd, 0x44, 0xa5, 0x98, 0x3d, 0xd6, 0x05, 0x95, 0x53,
	0x93, 0xeb, 0x60, 0xd4, 0x32, 0x19, 0x30, 0xe1, 0x3f, 0x63, 0x86, 0xae, 0xf4, 0xf1, 0xa1, 0x31,
	0x5a, 0xe9, 0x05, 0x44, 0x4d, 0x0f, 0x4c, 0x7a, 0xbc, 0xb7, 0xbd, 0xac, 0x3f, 0xe9, 0x43, 0xf8,
	0x51, 0x4a, 0x21, 0x9b, 0x8f, 0x8a, 0x8d, 0xa4, 0xe3, 0x7c, 0x66, 0x73, 0x0c, 0x3e, 0xb2, 0x8f,
	0xa4, 0x28, 0x0f, 0xe8, 0xd5, 0x75, 0x13, 0xfa, 0xae, 0xfd, 0x8c, 0x9c, 0xd6, 0xa5, 0x9d, 0x06,
	0x03, 0x1f, 0xda, 0x70, 0x5f, 0x5c, 0x73, 0x85, 0x4a, 0x17, 0x15, 0x43, 0x3a, 0xe1, 0x4a, 0x99,
	0x67, 0x71, 0x72, 0x78, 0x8e, 0x81, 0xef, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x87, 0x73, 0x2b,
	0x39, 0x2b, 0x07, 0x00, 0x00,
}
